{"name":"Underscore-php","body":"# Underscore.php\r\n\r\nUnderscore.php is a PHP port of Underscore.js. Its goal is to ease the working and manipulation of arrays, strings and such in PHP. My first goal is to match all of Underscore's methods but I'll probably add more helpers along the way for stuff that people do on a daily basis.\r\nIt can be used both as a static class, and an Object-Oriented class, so both the following are valid :\r\n\r\n```php\r\n$array = array(1, 2, 3);\r\n\r\nUnderscore::map($array, function($value) { return $value * 2; })\r\nunderscore($array)->map(function($value) { return $value * 2; })\r\n```\r\n\r\nYou can also alias Underscore's core classes and call them at any time, this mostly provides syntaxic elegance :\r\n\r\n```php\r\nArrays::first(...)\r\nCollection::each(...)\r\nString::escape(...)\r\n```\r\n\r\nIt comes with a config file that allows you to alias the main class to whatever you want, the default being `Underscore` and the most common probably being `__` (which is already taken in **Laravel** by the translation helper).\r\n\r\n# Documentation\r\n\r\n**Available classes**\r\n- [Collection][] : Helpers for objects and arrays\r\n\r\n## Collection\r\n\r\n### Collection::get\r\n\r\nGet a value from an array using dot-notation\r\n\r\n```php\r\n$array = underscore(array('foo' => array('bar' => 'ter')));\r\n$array->get('foo.bar') // Return 'ter'\r\n```\r\n\r\n### Collection::each\r\n\r\nIterate over an array to execute a callback at each loop\r\n\r\n```php\r\n$multiplier = 3;\r\nUnderscore::each(array(1, 2, 3), function($value) use ($multiplier) {\r\n  echo $value * $multiplier; // Prints out 3, 6, 9\r\n});\r\n```\r\n\r\n### Collection::map\r\n\r\nIterate over an array and apply a callback to each value\r\n\r\n```php\r\nUnderscore::map(array(1, 2, 3), function($value) {\r\n  return $value * 3; // Return array(3, 6, 9)\r\n});\r\n```\r\n\r\n### Collection::find\r\n\r\nFind the first value in an array that passes a truth test\r\n\r\n```php\r\nUnderscore::find(array(1, 2, 3), function($value) {\r\n  return $value % 2 == 0; // Returns 2\r\n});\r\n```\r\n\r\n[Collection]: #collection\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"A PHP port of Underscore.js"}